{"version":3,"file":"js/MachineManageWeb.js","mappings":"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","sources":["webpack://react-self/webpack/runtime/chunk loaded","webpack://react-self/./src/js/MachineManageWeb.tsx","webpack://react-self/./src/js/components/_commons/commonSet/Nav.tsx","webpack://react-self/./src/js/components/_commons/commonSet/Nav2.tsx","webpack://react-self/./src/js/components/_commons/commonSet/commonSet.tsx","webpack://react-self/./src/js/components/_commons/commonSet/footer.tsx","webpack://react-self/./src/js/components/_commons/commonSet/header.tsx","webpack://react-self/./src/js/components/_pages/Companies/Companies.tsx","webpack://react-self/./src/js/components/_pages/Machines/Machines.tsx","webpack://react-self/./src/js/components/_pages/Machines/ModalForm/CheckAndRadio.tsx","webpack://react-self/./src/js/components/_pages/Machines/ModalForm/IPaddressesForm.tsx","webpack://react-self/./src/js/components/_pages/Machines/ModalForm/MainTextForm.tsx","webpack://react-self/./src/js/components/_pages/Machines/ModalForm/ModalForm.tsx","webpack://react-self/./src/js/components/_pages/Machines/ModalForm/SubTextForm.tsx","webpack://react-self/./src/js/components/_pages/Machines/Table/Table.tsx","webpack://react-self/./src/js/components/_pages/Machines/Table/TitleColumn.tsx","webpack://react-self/./src/js/components/_pages/Products/Products.tsx","webpack://react-self/./src/js/components/_pages/Products/Table/Table.tsx","webpack://react-self/./src/js/components/_pages/Products/Table/TitleColumn.tsx","webpack://react-self/./src/js/components/_pages/Systems/Systems.tsx","webpack://react-self/./src/js/components/_pages/Systems/Table/Table.tsx","webpack://react-self/./src/js/components/_pages/Systems/Table/TitleColumn.tsx","webpack://react-self/./src/js/components/_pages/Top/Top.tsx","webpack://react-self/./src/js/components/_pages/Users/Users.tsx","webpack://react-self/./src/js/components/_pages/_RoutingV5.tsx","webpack://react-self/./src/js/config/appConfig.ts","webpack://react-self/./src/js/config/dataFormat/company.ts","webpack://react-self/./src/js/config/dataFormat/enum.ts","webpack://react-self/./src/js/config/dataFormat/ipAddress.ts","webpack://react-self/./src/js/config/dataFormat/machine.ts","webpack://react-self/./src/js/config/dataFormat/product.ts","webpack://react-self/./src/js/config/dataFormat/system.ts","webpack://react-self/./src/js/config/development.ts","webpack://react-self/./src/js/reducks/Counter/reducer.ts","webpack://react-self/./src/js/reducks/Counter/types.ts","webpack://react-self/./src/js/reducks/Counter2/reducer.ts","webpack://react-self/./src/js/reducks/Counter2/types.ts","webpack://react-self/./src/js/reducks/Machines/action.ts","webpack://react-self/./src/js/reducks/Machines/operations.ts","webpack://react-self/./src/js/reducks/Machines/reducer.ts","webpack://react-self/./src/js/reducks/Machines/selectors.ts","webpack://react-self/./src/js/reducks/Machines/types.ts","webpack://react-self/./src/js/reducks/Products/action.ts","webpack://react-self/./src/js/reducks/Products/operations.ts","webpack://react-self/./src/js/reducks/Products/reducer.ts","webpack://react-self/./src/js/reducks/Products/types.ts","webpack://react-self/./src/js/reducks/Router/selectors.ts","webpack://react-self/./src/js/reducks/Systems/action.ts","webpack://react-self/./src/js/reducks/Systems/operations.ts","webpack://react-self/./src/js/reducks/Systems/reducer.ts","webpack://react-self/./src/js/reducks/Systems/types.ts","webpack://react-self/./src/js/reducks/store.ts","webpack://react-self/webpack/bootstrap","webpack://react-self/webpack/runtime/compat get default export","webpack://react-self/webpack/runtime/define property getters","webpack://react-self/webpack/runtime/global","webpack://react-self/webpack/runtime/hasOwnProperty shorthand","webpack://react-self/webpack/runtime/make namespace object","webpack://react-self/webpack/runtime/node module decorator","webpack://react-self/webpack/runtime/jsonp chunk loading","webpack://react-self/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { BrowserRouter as Router, Link } from \"react-router-dom\" /* v5 */\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\" /* v6 */\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n// pick a date util library\nimport DateFnsUtils from '@date-io/date-fns';\nimport store, { history } from \"reducks/store\";\nimport { StylesProvider } from \"@material-ui/core\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport Routing from \"components/_pages/_RoutingV5\";\nimport { Header, Footer, Nav, Nav2 } from \"components/_commons/commonSet/commonSet\";\n\nconst target = document.getElementById(\"app\");\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StylesProvider injectFirst>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Header />\n            {/* <Nav /> */}\n            <Nav2 />\n            <Routing />\n            <Footer />\n          </MuiPickersUtilsProvider>\n        </ConnectedRouter>\n      </Provider>\n    </StylesProvider>\n  </React.StrictMode>,\n  target\n);\n","import React, { useState, useEffect } from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\";\nimport { RouteList } from \"appConfig\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => {\n  const changeTabs = (e: React.ChangeEvent<{}>, value: number) => {\n    setValue(value);\n  }\n  const reloadTabFix = (): number => {\n    switch (history.location.pathname) {\n      case RouteList.top:\n        return 0;\n      case RouteList.machines:\n        return 1;\n      case RouteList.systems:\n        return 2;\n      case RouteList.products:\n        return 3;\n      case RouteList.users:\n        return 4;\n      default:\n        return 0;\n    }\n  }\n\n  const history = useHistory();\n  const [value, setValue] = useState(reloadTabFix);\n\n  return (\n    // <AppBar position=\"static\">\n    <Paper>\n      <Tabs value={value} onChange={changeTabs}>\n        <Tab label=\"TOP\" component={Link} to={RouteList.top}></Tab>\n        <Tab label=\"機材管理\" component={Link} to={RouteList.machines}></Tab>\n        <Tab label=\"システム管理\" component={Link} to={RouteList.systems}></Tab>\n        <Tab label=\"製品管理\" component={Link} to={RouteList.products}></Tab>\n        <Tab label=\"ユーザー管理\" component={Link} to={RouteList.users}></Tab>\n      </Tabs>\n    </Paper>\n    // /* </AppBar> */\n  );\n}","import React, { useState, useEffect } from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\";\nimport { RouteList } from \"appConfig\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { push, getAction } from \"connected-react-router\";\nimport store, { RootState } from \"reducks/store\"\nimport { getPageNumber } from \"reducks/Router/selectors\";\n\nexport default () => {\n  const locationName = useSelector((state: RootState) => state.router.location.pathname)\n  const locationState = useSelector((state: RootState) => state.router)\n  const dispatch = useDispatch()\n  const pageNumber = getPageNumber(locationState);\n\n\n  const changeTabs = (PageName: string) => {\n    dispatch(push(PageName))\n  }\n\n  return (\n    // <AppBar position=\"static\">\n    <Paper>\n      <Tabs value={pageNumber}>\n        <Tab label=\"TOP\" onClick={() => changeTabs(RouteList.top)}></Tab>\n        <Tab label=\"機材管理\" onClick={() => changeTabs(RouteList.machines)}></Tab>\n        <Tab label=\"システム管理\" onClick={() => changeTabs(RouteList.systems)}></Tab>\n        <Tab label=\"製品管理\" onClick={() => changeTabs(RouteList.products)}></Tab>\n        <Tab label=\"ユーザー管理\" onClick={() => changeTabs(RouteList.users)}></Tab>\n      </Tabs>\n    </Paper>\n    // /* </AppBar> */\n  );\n}","export { default as Header} from \"components/_commons/commonSet/header\";\nexport { default as Nav} from \"components/_commons/commonSet/Nav\";\nexport { default as Nav2} from \"components/_commons/commonSet/Nav2\";\nexport { default as Footer} from \"components/_commons/commonSet/footer\";","import React from \"react\"\n\nexport default () => {\n    return (\n        <>\n            <footer></footer>\n        </>\n    );\n}","import React from \"react\"\n\nexport default () => {\n    return (\n            <header></header>\n    );\n}","import React from \"react\";\n\nexport default () =>{\n    return(\n        <main>\n            <h2></h2>\n        </main>\n    );\n}","import React from \"react\";\nimport Table from \"./Table/Table\";\nimport { getMachines } from \"reducks/Machines/operations\";\nimport { useDispatch } from \"react-redux\";\nimport ModalForm from \"pages/Machines/ModalForm/ModalForm\";\n\nexport default () => {\n\n  // redux hooks\n  const dispatch = useDispatch()\n\n  // 更新イベント\n  const onClickUpdate = (e: React.MouseEvent) => {\n    dispatch(getMachines())\n  }\n\n  return (\n    <main>\n        <ModalForm></ModalForm>\n        <h2>機材一覧表示</h2>\n        <button onClick={onClickUpdate}>更新</button>\n        <Table></Table>\n    </main>\n  );\n};\n","import {\n  Checkbox as MCheckbox,\n  FormControl as MFormControl,\n  FormControlLabel as MFormControlLabel,\n  Radio as MRadio,\n  RadioGroup as MRadioGroup,\n} from \"@material-ui/core\"\nimport React, { useEffect, useState } from \"react\"\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\nimport { editDataAction } from \"reducks/Machines/action\"\nimport { convertCheckRadioSystems } from \"reducks/Machines/selectors\"\nimport styled from \"styled-components\"\n\ntype Props = {\n  className?: string\n}\n\nconst radio = \"radio\"\nconst check = \"check\"\nconst used = \"used\"\nconst unused = \"unused\"\n\nconst CheckAndRadio = ({ className = \"\", }: Props) => {\n  const dispatch = useDispatch()\n  // チェックボックス, ラジオボタン用システム取得\n  const checkRadioSystems = [...useSelector(convertCheckRadioSystems, shallowEqual)]\n\n  const radioChange = (targetSystemId: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const nextMainSystemId = targetSystemId\n    const nextSystems = [...checkRadioSystems]\n      .map(v => {\n        v.main_flg = false\n        return v\n      })\n      .map(v => {\n        if (v.system_id === nextMainSystemId) {\n          v.main_flg = true\n          v.used = true\n        }\n        return v\n      })\n      .filter(v => v.used)\n      .map(v => {\n        return {\n          system_id: v.system_id,\n          system_name: v.system_name,\n          system_en_name: v.system_en_name,\n          main_flg: v.main_flg\n        }\n      })\n\n    dispatch(editDataAction(nextSystems, \"systems\"))\n\n  }\n  \n  const checkboxChange = (targetSystemId: number) => (e: React.ChangeEvent<HTMLInputElement>, checkState: boolean) => {\n    checkBoxJudge(targetSystemId, checkState)\n  }\n\n  const labelClick = (targetSystemId: number, checkState: boolean) => (e: React.MouseEvent<HTMLElement>) => {\n    checkBoxJudge(targetSystemId, checkState)\n    // イベント伝搬停止\n    e.preventDefault()\n  }\n\n  const checkBoxJudge = (targetSystemId: number, nextCheckState: boolean) => {\n    const nextSystems = checkRadioSystems\n      .map(v => {\n        if (v.system_id === targetSystemId) {\n          v.used = nextCheckState\n          if (!nextCheckState)\n            v.main_flg = false\n        }\n        return v\n      })\n      .filter(v => v.used)\n      .map(v => {\n        return {\n          system_id: v.system_id,\n          system_name: v.system_name,\n          system_en_name: v.system_en_name,\n          main_flg: v.main_flg\n        }\n      })\n\n    dispatch(editDataAction(nextSystems, \"systems\"))\n  }\n\n  return (\n    <MFormControl className={className}>\n      {\n        checkRadioSystems.map((v, i) => {\n          return (\n            <React.Fragment key={i}>\n              <MFormControlLabel value={v.system_id} label=\"\" control={\n                <>\n                  <MRadio checked={v.main_flg} onChange={radioChange(v.system_id)} className={radio} />\n                  <MFormControlLabel\n                    className={(v.used ? used : unused)}\n                    value={v.system_id}\n                    control={\n                      <MCheckbox checked={v.used} onChange={checkboxChange(v.system_id)} className={check} />\n                    }\n                    label={v.system_name} onClick={labelClick(v.system_id, !v.used)} />\n                </>\n              } />\n            </React.Fragment>\n          )\n        })\n      }\n    </MFormControl>\n  )\n}\n\nexport default styled(CheckAndRadio)`\n&&&&{\n    display: block;\n\n    .${used}{\n      color: white;\n      background-color:rgb(112, 177, 112);\n    }\n    \n    .${unused}{\n      color: black;\n    }\n    \n    .${unused}, .${used}{\n      float: left;\n      border: solid 1px;\n      border-color: rgb(112, 177, 112);\n      border-radius: 10px;\n      margin: 1px;\n      padding: 0px 5px;\n      transition: all 0.5s 0s cubic-bezier(.16,.64,.83,.67)\n    }\n\n     .${check}{\n      display: none;\n      margin: 0;\n      padding: 0;\n      float: left;\n    }\n  }\n`","import {\n  Checkbox as MCheckbox,\n  FormControl as MFormControl,\n  IconButton,\n  TextField as MTextField,\n} from \"@material-ui/core\"\nimport { AddCircleOutline, RemoveCircleOutline } from \"@material-ui/icons\"\nimport { initialMachineData } from \"appConfig\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\nimport { editDataAction } from \"reducks/Machines/action\"\nimport { RootState } from \"reducks/store\"\nimport styled from \"styled-components\"\n\ntype Props = {\n  className?: string\n}\n\nconst IpAddressesForm = ({ className = \"\", }: Props) => {\n  const dispatch = useDispatch()\n  const machineId = useSelector((state: RootState) => state.machines.editElement.data.machine_id, shallowEqual)\n  const nowIpAddresses = useSelector((state: RootState) => state.machines.editElement.data.ip_addresses)\n  const newIpId = useRef(-1)\n\n  const wiredChange = (targetIpId: number) => (e: React.ChangeEvent<HTMLInputElement>, checkState: boolean) => {\n\n    const nextIpAddresses = [...nowIpAddresses]\n      .map(v => {\n        if (v.ip_id === targetIpId)\n          v.wiredflg = checkState\n        return v\n      })\n    console.log(targetIpId)\n    console.log(nextIpAddresses)\n    dispatch(editDataAction(nextIpAddresses, \"ip_addresses\"))\n  }\n\n  const addIpForm = () => {\n    const nextIpAddresses = [...nowIpAddresses]\n    nextIpAddresses.push({\n      ip_id: newIpId.current,\n      ipv4_address: \"0.0.0.0\",\n      wiredflg: false,\n      machine_id: machineId\n    })\n\n    dispatch(editDataAction(nextIpAddresses, \"ip_addresses\"))\n\n    newIpId.current--\n  }\n  const removeIpForm = () => {\n    const nextIpAddresses = [...nowIpAddresses]\n    nextIpAddresses.pop()\n\n    dispatch(editDataAction(nextIpAddresses, \"ip_addresses\"))\n\n    newIpId.current === -1 ? newIpId.current : newIpId.current++\n  }\n\n  const ipChange = (targetIpId: number) => (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const nextIpAddresses = [...nowIpAddresses]\n      .map((v, i) => {\n        if (v.ip_id === targetIpId)\n          v.ipv4_address = e.target.value\n      })\n\n  }\n\n\n  return (\n    <MFormControl className={className}>\n      {\n        nowIpAddresses.map((v, i) => {\n          return (\n            <React.Fragment key={i}>\n              <div>\n                <MTextField defaultValue={v.ipv4_address} onBlur={ipChange(v.ip_id)}></MTextField>\n                <MCheckbox checked={v.wiredflg} onChange={wiredChange(v.ip_id)} />\n              </div>\n            </React.Fragment>\n          )\n        })\n      }\n      <div>\n        <IconButton onClick={addIpForm}>\n          <AddCircleOutline />\n        </IconButton>\n        <IconButton onClick={removeIpForm}>\n          <RemoveCircleOutline />\n        </IconButton>\n      </div>\n    </MFormControl>\n  )\n}\n\nexport default styled(IpAddressesForm)`\n&&&&{\n    display: block;\n\n  }\n`","import {\n  Fade as MFade,\n  Modal as MModal,\n  Select as MSelect,\n  TextField as MTextField,\n} from \"@material-ui/core\"\nimport { initialMachineData, initialSystemData, machineData, systemData } from \"appConfig\"\nimport React, { useState } from \"react\"\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\nimport { editDataAction} from \"reducks/Machines/action\"\nimport { RootState } from \"reducks/store\"\nimport styled from \"styled-components\"\nimport CheckAndRadio from \"./CheckAndRadio\"\nimport IPaddressesForm from \"./IPaddressesForm\"\n\ntype Props = {\n  className?: string\n}\nconst formContent = \"form-content\"\nconst textField = \"text-field\"\n\nconst ModalComponent = ({ className = \"\", }: Props) => {\n  const dispatch = useDispatch()\n  const machineName = useSelector((state: RootState) => state.machines.editElement.data.machine_name, shallowEqual)\n  const hostName = useSelector((state: RootState) => state.machines.editElement.data.host_name, shallowEqual)\n  const adminName = useSelector((state: RootState) => state.machines.editElement.data.administrator, shallowEqual)\n  const place = useSelector((state: RootState) => state.machines.editElement.data.place, shallowEqual)\n\n  const nameChange = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    dispatch(editDataAction(e.target.value, \"machine_name\"))\n  }\n  const hostChange = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    dispatch(editDataAction(e.target.value, \"host_name\"))\n  }\n  const placeChange = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    dispatch(editDataAction(e.target.value, \"place\"))\n  }\n  const adminChange = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    dispatch(editDataAction(e.target.value, \"administrator\"))\n  }\n\n  return (\n      <div className={formContent}>\n        <MTextField label=\"機材名\" defaultValue={machineName} variant=\"outlined\" onBlur={nameChange} className={textField} />\n        <MTextField label=\"ホスト名\" defaultValue={hostName} variant=\"outlined\" onBlur={hostChange} className={textField} />\n        <MTextField label=\"管理者\" defaultValue={adminName} variant=\"outlined\" onBlur={adminChange} className={textField} />\n        <MTextField label=\"保管場所\" defaultValue={place} variant=\"outlined\" onBlur={placeChange} className={textField} />\n      </div>\n  )\n}\n\nexport default styled(ModalComponent)`\n  &&&{\n   \n    .${textField}{\n      font-size: 10px;\n      padding: 0;\n    }\n  }\n`","import {\n  Fade as MFade,\n  Modal as MModal,\n  Select as MSelect,\n  TextField as MTextField,\n} from \"@material-ui/core\"\nimport { initialMachineData, initialSystemData, machineData, systemData } from \"appConfig\"\nimport React, { useState } from \"react\"\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\nimport { editDataAction, setMachineAction } from \"reducks/Machines/action\"\nimport { RootState } from \"reducks/store\"\nimport styled from \"styled-components\"\nimport CheckAndRadio from \"./CheckAndRadio\"\nimport IPaddressesForm from \"./IPaddressesForm\"\nimport MainTextForm from \"./MainTextForm\"\nimport SubTextForm from \"./SubTextForm\"\n\ntype Props = {\n  className?: string\n}\nconst modalContent = \"modal-content\"\nconst textField = \"text-field\"\n\nconst ModalComponent = ({ className = \"\", }: Props) => {\n  const dispatch = useDispatch()\n  const modalFlg=useSelector((state: RootState) => state.machines.editElement.modalFlg, shallowEqual)\n  const onModalClose = () => {\n    dispatch(setMachineAction(initialMachineData, false))\n  }\n\n  return (\n    <>\n      <MModal className={className} open={modalFlg} onClose={onModalClose} closeAfterTransition>\n        <MFade in={modalFlg}>\n          <div className={modalContent}>\n            <MainTextForm />\n            <SubTextForm />\n            <IPaddressesForm />\n            <CheckAndRadio />\n            \n          </div>\n        </MFade>\n      </MModal>\n    </>\n  )\n}\n\nexport default styled(ModalComponent)`\n  &&&{\n    \n    .${modalContent}{\n    border: none;\n    border-radius: 10px;\n    background-color: white;\n    padding: 1%;\n    width: 75%;\n    height: 50%;\n    margin: 10% auto;\n    overflow-y: scroll;\n    \n    .${textField}{\n      font-size: 10px;\n      padding: 0;\n    }\n  }\n  }\n`","import {\n  Fade as MFade,\n  Modal as MModal,\n  Select as MSelect,\n  TextareaAutosize,\n  TextField as MTextField,\n} from \"@material-ui/core\"\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport React, { useState } from \"react\"\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\nimport { editDataAction, setMachineAction } from \"reducks/Machines/action\"\nimport { RootState } from \"reducks/store\"\nimport styled from \"styled-components\"\n\ntype Props = {\n  className?: string\n}\nconst formContent = \"form-content\"\nconst textField = \"text-field\"\n\nconst ModalComponent = ({ className = \"\", }: Props) => {\n  const dispatch = useDispatch()\n\n  const assurance = useSelector((state: RootState) => state.machines.editElement.data.assurance, shallowEqual)\n  const notes = useSelector((state: RootState) => state.machines.editElement.data.notes, shallowEqual)\n  const purchaseDate = useSelector((state: RootState) => state.machines.editElement.data.purchase_date)\n\n  const nameChange = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    dispatch(editDataAction(e.target.value, \"machine_name\"))\n  }\n  const hostChange = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    dispatch(editDataAction(e.target.value, \"host_name\"))\n  }\n  const purchaseDateChange = (date: Date) => {\n    dispatch(editDataAction(date, \"purchase_date\"))\n  }\n\n  return (\n    <div className={formContent}>\n      <MTextField label=\"保険内容\" defaultValue={assurance} variant=\"outlined\" onBlur={hostChange} className={textField} />\n      <MTextField label=\"備考\" defaultValue={notes} variant=\"outlined\" onBlur={nameChange} className={textField} multiline />\n      <DatePicker value={purchaseDate}\n        format=\"yyyy/MM\"\n        variant=\"inline\"\n        label=\"購入年月\"\n        disableToolbar\n        onChange={(date) => date !== null ? purchaseDateChange(date) : {}} />\n    </div>\n  )\n}\n\nexport default styled(ModalComponent)`\n  &&&{\n   \n    .${textField}{\n      font-size: 10px;\n      padding: 0;\n    }\n  }\n  `","import React, { useState, useEffect, } from \"react\";\nimport styled from \"styled-components\";\nimport MTable from \"@material-ui/core/Table\";\nimport MTableBody from \"@material-ui/core/TableBody\";\nimport MTableHead from \"@material-ui/core/TableHead\";\nimport MTableRow from \"@material-ui/core/TableRow\";\nimport MTableCell from \"@material-ui/core/TableCell\";\nimport MTablePageNation from \"@material-ui/core/TablePagination\";\nimport MTableFooter from \"@material-ui/core/TableFooter\";\nimport MTableContainer from \"@material-ui/core/TableContainer\";\nimport { RootState } from \"reducks/store\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport TitleColumn from \"./TitleColumn\";\nimport { pagingMachineAction } from \"reducks/Machines/action\";\nimport { getMachine, getMachines, sortMachineDatas } from \"reducks/Machines/operations\";\nimport { CircularProgress as MCircularProgress } from \"@material-ui/core\";\n\n\ntype Props = {\n  className?: string\n}\n\nconst MyTable = ({ className }: Props) => {\n  // redux hooks\n  const dispatch = useDispatch()\n  \n  const sortData = [...useSelector((state: RootState) => state.machines.tableData.sortData, shallowEqual)]\n  const pageData = { ...useSelector((state: RootState) => state.machines.tableData.pageElement, shallowEqual) }\n  const columnData = { ...useSelector((state: RootState) => state.machines.tableData.columnDisplayName, shallowEqual) }\n  const paging = (e: unknown, newPage: number) => {\n    dispatch(pagingMachineAction(newPage))\n    window.scrollTo(0, 0)\n  }\n\n  const onClickRecord = (machine_id: number) => (e: React.MouseEvent<unknown>) => {\n    dispatch(getMachine(machine_id))\n  }\n  // 更新\n  useEffect(() => {\n    dispatch(getMachines())\n  }, []);\n\n  return (\n    <>\n      <MTableContainer>\n        <MTable className={className}>\n          <MTableHead>\n            <MTableRow>\n              <MTablePageNation count={sortData.length} onPageChange={paging} page={pageData.nowPage} rowsPerPage={pageData.recordPerPage} />\n            </MTableRow>\n            <MTableRow>\n              <TitleColumn sortKey={\"systems\"}>{columnData.systems}</TitleColumn>\n              <TitleColumn sortKey={\"machine_id\"}>{columnData.machine_id}</TitleColumn>\n              <TitleColumn sortKey={\"machine_name\"}>{columnData.machine_name}</TitleColumn>\n              <TitleColumn sortKey={\"host_name\"}>{columnData.host_name}</TitleColumn>\n              <TitleColumn sortKey={\"administrator\"}>{columnData.administrator}</TitleColumn>\n              <TitleColumn sortKey={\"place\"}>{columnData.place}</TitleColumn>\n              <TitleColumn sortKey={\"serial_number\"}>{columnData.serial_number}</TitleColumn>\n              <TitleColumn sortKey={\"product\"}>{columnData.product}</TitleColumn>\n              <TitleColumn sortKey={\"assurance\"}>{columnData.assurance}</TitleColumn>\n              <TitleColumn sortKey={\"vender\"}>{columnData.vender}</TitleColumn>\n              <TitleColumn sortKey={\"notes\"}>{columnData.notes}</TitleColumn>\n              <TitleColumn sortKey={\"updated_at\"}>{columnData.updated_at}</TitleColumn>\n            </MTableRow>\n          </MTableHead>\n          <MTableBody>\n            {sortData.slice((pageData.nowPage) * pageData.recordPerPage, (pageData.nowPage + 1) * pageData.recordPerPage).map((v, i) => {\n              return (\n                <MTableRow className={\"tableRow\"} key={i} onClick={onClickRecord(v.machine_id)}>\n                  <MTableCell>{v.systems.find(v=> v.main_flg)?.system_name}</MTableCell>\n                  <MTableCell>{v.machine_id}</MTableCell>\n                  <MTableCell>{v.machine_name}</MTableCell>\n                  <MTableCell>{v.host_name}</MTableCell>\n                  <MTableCell>{v.administrator}</MTableCell>\n                  <MTableCell>{v.place}</MTableCell>\n                  <MTableCell>{v.serial_number}</MTableCell>\n                  <MTableCell>{v.product.product_name}</MTableCell>\n                  <MTableCell>{v.assurance}</MTableCell>\n                  <MTableCell>{v.vender.company_name}</MTableCell>\n                  <MTableCell>{v.notes}</MTableCell>\n                  <MTableCell>{v.updated_at.toString()}</MTableCell>\n                </MTableRow>\n              )\n            }\n            )}\n          </MTableBody>\n          <MTableFooter>\n            <MTableRow>\n              <MTablePageNation count={sortData.length} onPageChange={paging} page={pageData.nowPage} rowsPerPage={pageData.recordPerPage} />\n            </MTableRow>\n          </MTableFooter>\n        </MTable>\n      </MTableContainer>\n    </>\n  );\n};\n\nexport default styled(MyTable)`\n  width: 75%;\n  color: #42a5f5;\n  \n  th, td{\n    font-size: 12px;\n    \n  }\n\n  & .tableRow:hover{\n    cursor: pointer;\n    background-color: rgba(30, 184, 223, 0.176);\n  }\n\n   @media (max-width: 640px){\n    font-size: 32px;\n    color: #444444;\n  }\n  @media print{\n    font-size: 32px;\n    color: #444444;\n  \n}\n`","import React, { ReactNode } from \"react\";\nimport MTableCell from \"@material-ui/core/TableCell\";\nimport MTableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"reducks/store\";\nimport { machineData } from \"appConfig\";\nimport { sortMachineDatas } from \"reducks/Machines/operations\";\n\n\ntype Props = {\n  sortKey: keyof machineData,\n  children: ReactNode\n}\n\nexport default ({ sortKey, children }: Props) => {\n  const dispatch = useDispatch()\n  const sortElement = { ...useSelector((state: RootState) => state.machines.tableData.sortElement) }\n\n  //イベント\n  const clickSort = (targetColumn: keyof machineData) => (e: React.MouseEvent) => {\n    dispatch(sortMachineDatas(targetColumn, false))\n  }\n\n  return (\n    <MTableCell\n      sortDirection={sortElement.orderBy === sortKey ? sortElement.sortDirection : false}\n    >\n      <MTableSortLabel\n        active={sortElement.orderBy === sortKey}\n        direction={sortElement.orderBy === sortKey ? sortElement.sortDirection : undefined}\n        onClick={clickSort(sortKey)}\n      >\n        {children}\n      </MTableSortLabel>\n    </MTableCell>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport Table from \"./Table/Table\";\n\nexport default () => {\n\n    return (\n        <main>\n            <Table></Table>\n        </main>\n    );\n}","import React, { useState, useEffect, } from \"react\";\nimport styled from \"styled-components\";\nimport MTable from \"@material-ui/core/Table\";\nimport MTableBody from \"@material-ui/core/TableBody\";\nimport MTableHead from \"@material-ui/core/TableHead\";\nimport MTableRow from \"@material-ui/core/TableRow\";\nimport MTableCell from \"@material-ui/core/TableCell\";\nimport MTablePageNation from \"@material-ui/core/TablePagination\";\nimport MTableFooter from \"@material-ui/core/TableFooter\";\nimport MTableContainer from \"@material-ui/core/TableContainer\";\nimport { RootState } from \"reducks/store\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport TitleColumn from \"./TitleColumn\";\nimport { pagingProductAction } from \"reducks/Products/action\";\nimport { getProduct, sortProductDatas, getProducts } from \"reducks/Products/operations\";\nimport { CircularProgress as MCircularProgress } from \"@material-ui/core\";\n\n\ntype Props = {\n  className?: string\n}\n\nconst MyTable = ({ className }: Props) => {\n  // redux hooks\n  const dispatch = useDispatch()\n  const sortData = [...useSelector((state: RootState) => state.products.tableData.sortData, shallowEqual)]\n  const pageData = { ...useSelector((state: RootState) => state.products.tableData.pageElement, shallowEqual) }\n  const columnData = { ...useSelector((state: RootState) => state.products.tableData.columnDisplayName, shallowEqual) }\n\n  const paging = (e: unknown, newPage: number) => {\n    dispatch(pagingProductAction(newPage))\n    window.scrollTo(0, 0)\n  }\n  \n  const onClickRecord = (product_id: number) => (e: React.MouseEvent<unknown>) => {\n    dispatch(getProduct(product_id))\n  }\n\n  // 更新\n  useEffect(() => {\n    dispatch(getProducts())\n  }, []);\n\n  return (\n    <>\n      <MTableContainer>\n        <MTable className={className}>\n          <MTableHead>\n            <MTableRow>\n              <MTablePageNation count={sortData.length} onPageChange={paging} page={pageData.nowPage} rowsPerPage={pageData.recordPerPage} />\n            </MTableRow>\n            <MTableRow>\n              <TitleColumn sortKey={\"product_id\"}>{columnData.product_id}</TitleColumn>\n              <TitleColumn sortKey={\"product_name\"}>{columnData.product_name}</TitleColumn>\n              <TitleColumn sortKey={\"product_type\"}>{columnData.product_type}</TitleColumn>\n              <TitleColumn sortKey={\"manufacturer\"}>{columnData.manufacturer}</TitleColumn>\n              <TitleColumn sortKey={\"model_number\"}>{columnData.model_number}</TitleColumn>\n            </MTableRow>\n          </MTableHead>\n          <MTableBody>\n            {sortData.slice((pageData.nowPage) * pageData.recordPerPage, (pageData.nowPage + 1) * pageData.recordPerPage).map((v, i) => {\n              return (\n                <MTableRow className={\"tableRow\"} key={i} onClick={onClickRecord(v.product_id)}>\n                  <MTableCell>{v.product_id}</MTableCell>\n                  <MTableCell>{v.product_name}</MTableCell>\n                  <MTableCell>{v.product_type.product_type_name}</MTableCell>\n                  <MTableCell>{v.manufacturer.company_name}</MTableCell>\n                  <MTableCell>{v.model_number}</MTableCell>\n                </MTableRow>\n              )\n            }\n            )}\n          </MTableBody>\n          <MTableFooter>\n            <MTableRow>\n              <MTablePageNation count={sortData.length} onPageChange={paging} page={pageData.nowPage} rowsPerPage={pageData.recordPerPage} />\n            </MTableRow>\n          </MTableFooter>\n        </MTable>\n      </MTableContainer>\n    </>\n  );\n};\n\nexport default styled(MyTable)`\n  width: 75%;\n  color: #42a5f5;\n  \n  th, td{\n    font-size: 12px;\n    \n  }\n\n  & .tableRow:hover{\n    cursor: pointer;\n    background-color: rgba(30, 184, 223, 0.176);\n  }\n\n   @media (max-width: 640px){\n    font-size: 32px;\n    color: #444444;\n  }\n  @media print{\n    font-size: 32px;\n    color: #444444;\n  \n}\n`","import React, { ReactNode } from \"react\";\nimport MTableCell from \"@material-ui/core/TableCell\";\nimport MTableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"reducks/store\";\nimport { productData } from \"appConfig\";\nimport { sortProductDatas, sortProductDatas2 } from \"reducks/Products/operations\";\n\n\ntype Props = {\n  sortKey: keyof productData,\n  children: ReactNode\n}\n\nexport default ({ sortKey, children }: Props) => {\n  const dispatch = useDispatch()\n  const sortElement = { ...useSelector((state: RootState) => state.products.tableData.sortElement) }\n\n  //イベント\n  const clickSort = (targetColumn: keyof productData) => (e: React.MouseEvent) => {\n    dispatch(sortProductDatas2(targetColumn, false))\n  }\n  return (\n    <MTableCell\n      sortDirection={sortElement.orderBy === sortKey ? sortElement.sortDirection : false}\n    >\n      <MTableSortLabel\n        active={sortElement.orderBy === sortKey}\n        direction={sortElement.orderBy === sortKey ? sortElement.sortDirection : undefined}\n        onClick={clickSort(sortKey as keyof productData)}\n      >\n        {children}\n      </MTableSortLabel>\n    </MTableCell>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { appConfig, SystemsAPI, systemData } from \"appConfig\";\nimport { useDispatch } from \"react-redux\";\nimport Table from \"pages/Systems/Table/Table\";\n\nexport default () => {\n  const dispatch = useDispatch()\n\n  return (\n    <main>\n      <h2>I am Systems</h2>\n      <Table></Table>\n    </main>\n  );\n}","import React, { useState, useEffect, } from \"react\";\nimport styled from \"styled-components\";\nimport MTable from \"@material-ui/core/Table\";\nimport MTableBody from \"@material-ui/core/TableBody\";\nimport MTableHead from \"@material-ui/core/TableHead\";\nimport MTableRow from \"@material-ui/core/TableRow\";\nimport MTableCell from \"@material-ui/core/TableCell\";\nimport MTablePageNation from \"@material-ui/core/TablePagination\";\nimport MTableFooter from \"@material-ui/core/TableFooter\";\nimport MTableContainer from \"@material-ui/core/TableContainer\";\nimport { RootState } from \"reducks/store\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport TitleColumn from \"./TitleColumn\";\nimport { pagingAction } from \"reducks/Systems/action\";\nimport { getSystem, sortSystemDatas, getSystems } from \"reducks/Systems/operations\";\nimport { CircularProgress as MCircularProgress } from \"@material-ui/core\";\n\n\ntype Props = {\n  className?: string\n}\n\nconst MyTable = ({ className }: Props) => {\n  // redux hooks\n  const dispatch = useDispatch()\n  const sortData = [...useSelector((state: RootState) => state.systems.tableData.sortData, shallowEqual)]\n  const pageData = { ...useSelector((state: RootState) => state.systems.tableData.pageElement, shallowEqual) }\n  const columnData = { ...useSelector((state: RootState) => state.systems.tableData.columnDisplayName, shallowEqual) }\n\n  const paging = (e: unknown, newPage: number) => {\n    dispatch(pagingAction(newPage))\n    window.scrollTo(0, 0)\n  }\n  \n  const onClickRecord = (system_id: number) => (e: React.MouseEvent<unknown>) => {\n    dispatch(getSystem(system_id))\n  }\n\n  // 更新\n  useEffect(() => {\n    dispatch(getSystems())\n    dispatch(sortSystemDatas(\"system_id\", false))\n  }, []);\n\n  return (\n    <>\n      <MTableContainer>\n        <MTable className={className}>\n          <MTableHead>\n            <MTableRow>\n              <MTablePageNation count={sortData.length} onPageChange={paging} page={pageData.nowPage} rowsPerPage={pageData.recordPerPage} />\n            </MTableRow>\n            <MTableRow>\n              <TitleColumn sortKey={\"system_id\"}>{columnData.system_id}</TitleColumn>\n              <TitleColumn sortKey={\"system_name\"}>{columnData.system_name}</TitleColumn>\n              <TitleColumn sortKey={\"system_en_name\"}>{columnData.system_en_name}</TitleColumn>\n            </MTableRow>\n          </MTableHead>\n          <MTableBody>\n            {sortData.slice((pageData.nowPage) * pageData.recordPerPage, (pageData.nowPage + 1) * pageData.recordPerPage).map((v, i) => {\n              return (\n                <MTableRow className={\"tableRow\"} key={i} onClick={onClickRecord(v.system_id)}>\n                  <MTableCell>{v.system_id}</MTableCell>\n                  <MTableCell>{v.system_name}</MTableCell>\n                  <MTableCell>{v.system_en_name}</MTableCell>\n                </MTableRow>\n              )\n            }\n            )}\n          </MTableBody>\n          <MTableFooter>\n            <MTableRow>\n              <MTablePageNation count={sortData.length} onPageChange={paging} page={pageData.nowPage} rowsPerPage={pageData.recordPerPage} />\n            </MTableRow>\n          </MTableFooter>\n        </MTable>\n      </MTableContainer>\n    </>\n  );\n};\n\nexport default styled(MyTable)`\n  width: 75%;\n  color: #42a5f5;\n  \n  th, td{\n    font-size: 12px;\n    \n  }\n\n  & .tableRow:hover{\n    cursor: pointer;\n    background-color: rgba(30, 184, 223, 0.176);\n  }\n\n   @media (max-width: 640px){\n    font-size: 32px;\n    color: #444444;\n  }\n  @media print{\n    font-size: 32px;\n    color: #444444;\n  \n}\n`","import React, { ReactNode } from \"react\";\nimport MTableCell from \"@material-ui/core/TableCell\";\nimport MTableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"reducks/store\";\nimport { systemData } from \"appConfig\";\nimport { sortSystemDatas } from \"reducks/Systems/operations\";\n\n\ntype Props = {\n  sortKey: keyof systemData,\n  children: ReactNode\n}\n\nexport default ({ sortKey, children }: Props) => {\n  const dispatch = useDispatch()\n  const sortElement = { ...useSelector((state: RootState) => state.systems.tableData.sortElement) }\n\n  //イベント\n  const clickSort = (targetColumn: keyof systemData) => (e: React.MouseEvent) => {\n    dispatch(sortSystemDatas(targetColumn, false))\n  }\n  return (\n    <MTableCell\n      sortDirection={sortElement.orderBy === sortKey ? sortElement.sortDirection : false}\n    >\n      <MTableSortLabel\n        active={sortElement.orderBy === sortKey}\n        direction={sortElement.orderBy === sortKey ? sortElement.sortDirection : undefined}\n        onClick={clickSort(sortKey as keyof systemData)}\n      >\n        {children}\n      </MTableSortLabel>\n    </MTableCell>\n  )\n}","import React from \"react\";\n\nexport default () =>{\n    return(\n        <main>\n            <h2>I am Top</h2>\n        </main>\n    );\n}","import React from \"react\";\n\nexport default () =>{\n    return(\n        <main>\n            <h2></h2>\n        </main>\n    );\n}","import \"core-js/stable\";\nimport React from \"react\";\nimport Top from \"pages/Top/Top\";\nimport Machines from \"pages/Machines/Machines\";\nimport Systems from \"pages/Systems/Systems\";\nimport Products from \"pages/Products/Products\";\nimport Users from \"pages/Users/Users\";\nimport { RouteList } from \"appConfig\"\n/****** routing version 5 ******/\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Companies from \"./Companies/Companies\";\n\nexport default () => {\n  return (\n    <Switch>\n      <Route exact path={RouteList.top} component={Top} />\n      <Route exact path={RouteList.machines} component={Machines} />\n      <Route exact path={RouteList.systems} component={Systems} />\n      <Route exact path={RouteList.products} component={Products} />\n      <Route exact path={RouteList.companies} component={Companies} />\n      <Route exact path={RouteList.users} component={Users} />\n    </Switch>\n  );\n}","import axios, { AxiosStatic } from \"axios\";\nimport { development } from \"./development\";\nimport {\n  roleData, initialRoleData, isRoleData,\n  statusData, initialStatusData, isStatusData,\n  productTypeData, initialProductTypeData, isProductTypeData\n} from \"./dataFormat/enum\"\nimport { machineData, machineSystem, initialMachineData, isMachineData, isMachineSystem } from \"./dataFormat/machine\";\nimport { systemData, initialSystemData, isSystemData } from \"./dataFormat/system\";\nimport { ipAddress, initialIpAddress, isIpAddress } from \"./dataFormat/ipAddress\";\nimport { productData, initialProductData, isProductData } from \"./dataFormat/product\"\nimport { companyData, initialCompanyData, isCompanyData } from \"./dataFormat/company\";\n\nconst MachinesAPI = {\n  root: \"machines\",\n  search: \"search\",\n  show: \"show\",\n  exchange: \"exchange\",\n  edit_by_qr: \"\",\n\n} as const;\ntype MachinesAPI = typeof MachinesAPI[keyof typeof MachinesAPI];\n\nconst SystemsAPI = {\n  root: \"system_masters\",\n  search: \"search\",\n  show: \"show\",\n  exchange: \"exchange\",\n  edit_by_qr: \"\",\n\n} as const;\ntype SystemsAPI = typeof SystemsAPI[keyof typeof SystemsAPI];\n\nconst ProductsAPI = {\n  root: \"products\",\n  search: \"search\",\n  show: \"show\",\n  exchange: \"exchange\",\n  edit_by_qr: \"\",\n\n} as const;\ntype ProductsAPI = typeof ProductsAPI[keyof typeof ProductsAPI];\n\nconst RouteList = {\n  top: \"/\",\n  machines: \"/machines\",\n  companies: \"/companies\",\n  products: \"/products\",\n  systems: \"/systems\",\n  users: \"/users\",\n}\ntype RouteList = typeof RouteList[keyof typeof RouteList]\n\ninterface configParam {\n  API_URL: string,\n  VERSION: string,\n}\n\nconst isArray = <T>(target: any): target is T[] => {\n  return Array.isArray(target);\n}\n\nclass AppConfig {\n  constructor(param: configParam) {\n    axios.defaults.baseURL = param.API_URL + \"/\" + param.VERSION;\n    // axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\n    // axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n  }\n\n  get axios(): AxiosStatic {\n    return axios;\n  }\n\n  doAPI<T>(apiMehod: T): void {\n  }\n\n}\nconst appConfig = new AppConfig(development);\n\n\nexport { configParam };\nexport { appConfig, isArray };\nexport { MachinesAPI };\nexport { SystemsAPI };\nexport { ProductsAPI };\nexport { RouteList };\nexport { roleData, initialRoleData, isRoleData };\nexport { statusData, initialStatusData, isStatusData };\nexport { productTypeData, initialProductTypeData, isProductTypeData };\nexport { machineData, machineSystem, initialMachineData, isMachineData, isMachineSystem };\nexport { ipAddress, initialIpAddress, isIpAddress }\nexport { systemData, initialSystemData, isSystemData };\nexport { productData, initialProductData, isProductData };\nexport { companyData, initialCompanyData, isCompanyData };\n","interface companyData {\n    company_id: number\n    company_name: string\n}\nconst initialCompanyData: companyData = {\n    company_id: -1,\n    company_name: \"-\",\n}\n\nconst isCompanyData = (target: any): target is companyData => {\n    return target.company_id !== undefined\n}\n\nexport { companyData, initialCompanyData, isCompanyData };\n","interface statusData {\n    status_id: number\n    status_name: string\n}\nconst initialStatusData: statusData = {\n    status_id: -1,\n    status_name: \"-\",\n}\n\nconst isStatusData = (target: any): target is statusData => {\n    return target.status_id !== undefined\n}\n\ninterface roleData {\n    role_id: number\n    role_name: string\n}\nconst initialRoleData: roleData = {\n    role_id: -1,\n    role_name: \"-\",\n}\n\nconst isRoleData = (target: any): target is roleData => {\n    return target.role_id !== undefined\n}\n\ninterface productTypeData {\n    product_type_id: number\n    product_type_name: string\n}\nconst initialProductTypeData: productTypeData = {\n    product_type_id: -1,\n    product_type_name: \"-\",\n}\n\nconst isProductTypeData = (target: any): target is productTypeData => {\n    return target.product_type_id !== undefined\n}\n\nexport { statusData, initialStatusData, isStatusData };\nexport { roleData, initialRoleData, isRoleData };\nexport { productTypeData, initialProductTypeData, isProductTypeData };\n","interface ipAddress {\n    ip_id: number,\n    ipv4_address: string,\n    machine_id: number,\n    wiredflg: boolean\n}\n\nconst initialIpAddress: ipAddress = {\n    ip_id: -1,\n    ipv4_address: \"-\",\n    machine_id: -1,\n    wiredflg: false,\n}\n\nconst isIpAddress= (target: any): target is ipAddress=>{\n    return target.ip_id !== undefined\n}\n\nexport { ipAddress, initialIpAddress, isIpAddress }\n","import { companyData, initialCompanyData } from \"./company\";\nimport { initialRoleData, initialStatusData, roleData, statusData } from \"./enum\";\nimport { initialIpAddress, ipAddress } from \"./ipAddress\";\nimport { initialProductData, productData } from \"./product\";\nimport { initialSystemData, isSystemData, systemData } from \"./system\";\n\ninterface machineData {\n    machine_id: number\n    machine_name: string\n    administrator: string\n    host_name: string\n    place: string\n    qr_or_barcode: string\n    maintenance_date: string\n    assurance: string\n    serial_number: string\n    purchase_date: string\n    notes: string\n    product: productData\n    status: statusData\n    role: roleData\n    ip_addresses: ipAddress[]\n    systems: machineSystem[]\n    vender: companyData\n    created_at: Date\n    updated_at: Date\n}\n\ntype machineSystem = ({\n    main_flg: boolean,\n} & systemData)\n\nconst initialMachineData: machineData = {\n    machine_id: -1,\n    machine_name: \"-\",\n    host_name: \"-\",\n    administrator: \"-\",\n    place: \"-\",\n    qr_or_barcode: \"-\",\n    maintenance_date: \"-\",\n    assurance: \"-\",\n    serial_number: \"-\",\n    purchase_date: \"-\",\n    notes: \"-\",\n    product: initialProductData,\n    status: initialStatusData,\n    ip_addresses: [initialIpAddress],\n    systems: [{\n        ...initialSystemData,\n        main_flg: false\n    }],\n    role: initialRoleData,\n    vender: initialCompanyData,\n    created_at: new Date(),\n    updated_at: new Date()\n}\n\n\n// type guard関数\nconst isMachineData = (target: any): target is machineData => {\n    return target.machine_id !== undefined\n}\nconst isMachineSystem = (target: any): target is machineSystem => {\n    return target.main_flg !== undefined && isSystemData(delete target.main_flg)\n\n}\n\nexport { machineData, machineSystem, initialMachineData, isMachineSystem, isMachineData };\n","import { companyData, initialCompanyData } from \"./company\";\nimport { initialProductTypeData, productTypeData } from \"./enum\";\n\ninterface productData {\n    product_id: number,\n    product_name: string,\n    model_number: string,\n    product_type: productTypeData,\n    manufacturer: companyData,\n}\n\nconst isProductData=(target: any): target is productData=>{\n    return target.product_id !== undefined\n}\n\nconst initialProductData: productData = {\n    product_id: -1,\n    product_name: \"-\",\n    model_number: \"-\",\n    product_type: initialProductTypeData,\n    manufacturer: initialCompanyData,\n}\n\nexport { productData, initialProductData, isProductData };\n","interface systemData {\n    system_id: number,\n    system_name: string,\n    system_en_name: string,\n}\n\nexport const isSystemData = (target: any): target is systemData => {\n    return target.system_id !== undefined\n}\n\nconst initialSystemData: systemData = {\n    system_id: -1,\n    system_name: \"-\",\n    system_en_name: \"-\",\n}\n\nexport { systemData, initialSystemData };\n","import { configParam } from \"appConfig\";\n\nconst development: configParam = {\n    API_URL: \"http://localhost:3000\",\n    VERSION: \"v1\",\n};\n\n\nexport { development };\n","import { Count, CounterActionTypes, CountActionTypes } from \"./types\";\nimport { Reducer } from \"redux\";\n\nconst initialState: Count = {\n    value: 0\n}\n\nexport const countReducer: Reducer<Count, CounterActionTypes>= (state = initialState, action: CounterActionTypes): Count => {\n    switch (action.type) {\n        case CountActionTypes.increment:\n            return { value: state.value + 1 }\n        case CountActionTypes.decrement:\n            return { value: state.value === 0 ? 0 : state.value - 1 }\n        case CountActionTypes.countReset:\n            return { value: 0 }\n        default:\n            const _: never = action\n            return state\n    }\n}","import { Action } from \"redux\";\n\n// State Type\nexport type Count = {\n  value: number\n}\n\n// Action Type\nexport const CountActionTypes = {\n  increment: \"INCREMENT\",\n  decrement: \"DECREMENT\",\n  countReset: \"COUNT_RESET\"\n} as const;\n\ninterface IncrementAction extends Action {\n  type: typeof CountActionTypes.increment\n}\ninterface DecrementAction extends Action {\n  type: typeof CountActionTypes.decrement\n}\ninterface ResetAction extends Action {\n  type: typeof CountActionTypes.countReset\n}\n\nexport type CounterActionTypes = IncrementAction | DecrementAction | ResetAction","import { CountStateType, CountActionType } from \"./types\";\nimport { Reducer } from \"redux\";\nimport { incrementAction2 } from \"./action\";\n\n\nconst initialState: CountStateType = {\n  value: 0\n}\n\nexport const countReducer: Reducer<CountStateType, CountActionType> = (state = initialState, action): CountStateType => {\n  let nextState = initialState\n  // console.log({\n  //   ...state,\n  //   value: state.value\n  // })\n\n  switch (action.type) {\n    case CountActionType.increment:\n      return {\n        ...state,\n        value: state.value + 1,\n      }\n    case CountActionType.decrement:\n      return {\n        ...state,\n        value: state.value === 0 ? 0 : state.value - 1\n      }\n    case CountActionType.countReset:\n      return {\n        ...state,\n        value: 0\n      }\n    default:\n      // const _: never = action\n      return state\n  }\n}","import { Action } from \"redux\";\n\n// State Type\ntype CountStateType = {\n\tvalue: number\n}\n// Action Type\nconst CountActionType = {\n\tincrement: \"INCREMENT2\",\n\tdecrement: \"DECREMENT2\",\n\tcountReset: \"COUNT_RESET2\"\n} as const;\n// type CountActionType = Action & {\n// \ttype: typeof CountActionType[keyof typeof CountActionType]\n// }\ntype CountActionType = Action<typeof CountActionType[keyof typeof CountActionType]> & {\n}\n\nexport { CountStateType, CountActionType }","import { SortDirection } from \"@material-ui/core\";\nimport { initialMachineData, machineData } from \"appConfig\";\nimport { MachinesActionType, MachinesAction } from \"./types\";\n\nexport const setMachineAction = (machineData: machineData, modalFlg: boolean): MachinesAction => {\n  return {\n    type: MachinesActionType.setMachine,\n    data: {\n      ...initialMachineData,\n      ...machineData\n    },\n    modalFlg: modalFlg,\n  }\n}\n\nexport const setMachinesAction = (machineDatas: machineData[]): MachinesAction => {\n  return {\n    type: MachinesActionType.setMachines,\n    data: machineDatas,\n  }\n}\n\nexport const editDataAction= (targetData: machineData[keyof machineData], key: keyof machineData): MachinesAction=>{\n  return {\n    type: MachinesActionType.editMachine,\n    data: targetData,\n    key: key\n  }\n}\n\n\nexport const sortMachineAction = (machineDatas: machineData[], orderBy: keyof machineData, sortDirection: Exclude<SortDirection, boolean>): MachinesAction => {\n  return {\n    type: MachinesActionType.sortMachine,\n    sortData: machineDatas,\n    sortElement: {\n      orderBy: orderBy,\n      sortDirection: sortDirection\n    }\n  }\n}\n\nexport const pagingMachineAction = (nextPage: number): MachinesAction => {\n  return {\n    type: MachinesActionType.pagingMachine,\n    nextPage: nextPage\n  }\n}","import { sortMachineAction, setMachinesAction, setMachineAction } from \"./action\"\nimport { MachinesAction } from \"./types\"\nimport { AppThunkAction } from \"reducks/store\"\nimport {\n  appConfig,\n  isMachineSystem,\n  machineData,\n  machineSystem,\n  MachinesAPI,\n  productData,\n  systemData,\n  isArray,\n  ipAddress,\n  isProductData,\n  isCompanyData\n} from \"appConfig\"\nimport { setSystemsAction } from \"reducks/Systems/action\"\nimport { SystemsAction } from \"reducks/Systems/types\"\nimport { SortDirection } from \"@material-ui/core\"\nimport { setProductsAction } from \"reducks/Products/action\"\nimport { ProductsAction } from \"reducks/Products/types\"\n\nexport const getMachines = (): AppThunkAction<MachinesAction> => {\n  return async (dispatch, getState) => {\n    const orderBy = getState().machines.tableData.sortElement.orderBy\n\n    await appConfig.axios.get(MachinesAPI.root)\n      .then(res => {\n        const machines = res.data.machines as machineData[]\n        dispatch(setMachinesAction(machines))\n        dispatch(sortMachineDatas(orderBy, true))\n      }\n      )\n      .catch(error =>\n        console.error(error)\n      )\n  }\n}\n\nexport const getMachine = (machine_id: number): AppThunkAction<MachinesAction | SystemsAction | ProductsAction> => {\n  return async (dispatch, getState) => {\n\n    appConfig.axios.get(MachinesAPI.root + `/${machine_id}`)\n      .then(res => {\n        const machine = res.data.machine as machineData\n        const systems = res.data.systems as systemData[]\n        const products = res.data.products as productData[]\n        dispatch(setMachineAction(machine, true))\n        dispatch(setSystemsAction(systems))\n        dispatch(setProductsAction(products))\n      })\n      .catch(e => {\n        console.log(e)\n      })\n  }\n}\n\nexport const sortMachineDatas = (targetColumn: keyof machineData, updateFlg: boolean = false): AppThunkAction<MachinesAction> => {\n\n  const sortFunction = (a: number | string, b: number | string, sortDirection: Exclude<SortDirection, boolean>): number => {\n\n    switch (sortDirection) {\n      case \"asc\":\n        if (a < b)\n          return -1\n        else if (a > b)\n          return 1\n        else\n          break;\n\n      case \"desc\":\n        if (a < b)\n          return 1\n        else if (a > b)\n          return -1\n        else\n          break;\n\n    }\n    return 0\n  }\n\n  return async (dispatch, getState) => {\n    const sortState = { ...getState().machines.tableData.sortElement }\n    const datas = [...getState().machines.datas]\n\n    // データが無い場合は終了\n    if (datas.length === 0)\n      return\n\n    // 次状態を現在のstateで初期化\n    const nextSortState = { ...sortState }\n\n    // データ更新ならばソート順は変更しない\n    switch (updateFlg) {\n      case true:\n        break;\n      case false:\n        if (sortState.orderBy === targetColumn) {\n          switch (sortState.sortDirection) {\n            case \"asc\":\n              nextSortState.sortDirection = \"desc\"\n              break;\n            case \"desc\":\n              nextSortState.sortDirection = \"asc\"\n              break;\n          }\n        }\n        // 別カラムを選ぶ場合は昇順にする\n        else {\n          nextSortState.orderBy = targetColumn\n          nextSortState.sortDirection = \"asc\"\n        }\n        break;\n    }\n\n    const nextSortDatas = datas.sort((a, b) => {\n      const typedA = a[targetColumn] === (\"\" || undefined || null) ? \"-\" : a[targetColumn]\n      const typedB = b[targetColumn] === (\"\" || undefined || null) ? \"-\" : b[targetColumn]\n\n      let targetA: string | number = 0;\n      let targetB: string | number = 0\n\n      switch (typeof typedA) {\n        case \"string\":\n        case \"number\":\n          targetA = typedA\n          targetB = typedB as typeof typedA\n          break;\n        case \"object\":\n          if (isArray<systemData>(typedA)) {\n            const systemA = typedA.find(v => v.main_flg)?.system_name\n            const systemB = (typedB as typeof typedA).find(v => v.main_flg)?.system_name\n\n            targetA = systemA !== undefined ? systemA : \"\"\n            targetB = systemB !== undefined ? systemB : \"\"\n          }\n          else if (isProductData(typedA)) {\n            targetA = typedA.product_name\n            targetB = (typedB as typeof typedA).product_name\n          }\n          else if (isCompanyData(typedA)) {\n            targetA = typedA.company_name\n            targetB = (typedB as typeof typedA).company_name\n          }\n          break;\n          \n        default:\n          return 0\n      }\n\n      return sortFunction(targetA, targetB, nextSortState.sortDirection)\n    })\n\n    dispatch(sortMachineAction(nextSortDatas, nextSortState.orderBy, nextSortState.sortDirection))\n\n  }\n}\n\nexport const pagingTable = (): AppThunkAction<MachinesAction> => {\n  return async () => {\n\n  }\n}","import { MachinesState, MachinesAction, MachinesActionType } from \"./types\"\nimport { Reducer } from \"redux\";\nimport { initialMachineData } from \"appConfig\";\n\nexport const initialState: MachinesState = {\n  datas: [initialMachineData],\n  editElement: {\n    data: initialMachineData,\n    modalFlg: false,\n  },\n  tableData: {\n    sortData: [initialMachineData],\n    columnDisplayName: {\n      machine_id: \"ID\",\n      machine_name: \"マシン名\",\n      host_name: \"ホスト名\",\n      administrator: \"管理者\",\n      place: \"保管場所\",\n      qr_or_barcode: \"QRコード\",\n      maintenance_date: \"最終メンテ日\",\n      assurance: \"保障\",\n      serial_number: \"シリアル\",\n      purchase_date: \"購入年月\",\n      notes: \"備考\",\n      product: \"製品\",\n      status: \"ステータス\",\n      ip_addresses: \"IPアドレス\",\n      systems: \"システム\",\n      role: \"ロール\",\n      vender: \"ベンダー\",\n      created_at: \"登録日\",\n      updated_at: \"更新日\"\n    },\n    sortElement: {\n      orderBy: \"machine_id\",\n      sortDirection: \"asc\"\n    },\n    pageElement: {\n      nowPage: 0,\n      recordPerPage: 25,\n      pageCount: 0,\n    },\n  }\n}\n\nexport const machinesReducer: Reducer<MachinesState, MachinesAction> = (state = initialState, action): MachinesState => {\n\n  switch (action.type) {\n    case MachinesActionType.setMachine:\n      return {\n        ...state,\n\n        editElement: {\n          ...state.editElement,\n\n          data: action.data,\n          modalFlg: action.modalFlg\n        }\n\n      }\n    case MachinesActionType.setMachines:\n      return {\n        ...state,\n\n        datas: action.data,\n        tableData: {\n          ...state.tableData,\n\n          pageElement: {\n            ...state.tableData.pageElement,\n\n            nowPage: 0\n          }\n        }\n\n      }\n\n    case MachinesActionType.editMachine:\n      return {\n        ...state,\n        editElement: {\n          ...state.editElement,\n\n          data: {\n            ...state.editElement.data,\n\n            [action.key]: action.data\n          }\n        }\n      }\n    case MachinesActionType.sortMachine:\n      return {\n        ...state,\n\n        tableData: {\n          ...state.tableData,\n\n          sortData: action.sortData,\n          sortElement: action.sortElement,\n        }\n      }\n    case MachinesActionType.pagingMachine:\n      return {\n        ...state,\n\n        tableData: {\n          ...state.tableData,\n\n          pageElement: {\n            ...state.tableData.pageElement,\n\n            nowPage: action.nextPage\n          }\n        }\n      }\n    default:\n      const _: never = action\n      return state\n  }\n}","import { RootState } from \"reducks/store\";\nimport { createSelector } from \"reselect\";\nimport linq from \"linq\"\nimport { initialSystemData, systemData } from \"appConfig\";\n\nconst editDataSystemSelector = (state: RootState) => state.machines.editElement.data.systems\nconst systemSelector = (state: RootState) => state.systems.datas\n\n// radioButton用データ加工\nexport const convertCheckRadioSystems = createSelector(\n  [editDataSystemSelector, systemSelector],\n  (editDataSystems, systems) => {\n    // データが所属しているシステム\n    const dataSystem = [...editDataSystems]\n\n    // チェックボックス、ラジオボタン用の型定義\n    type checkRadioType = {\n      // 扱いやすいようにsystem_idをkeyにする\n      [system_id: number]: {\n        main_flg: boolean\n        used: boolean\n      } & systemData\n    }\n\n    // チェックボックスラジオボタン用のオブジェクト生成\n    const checkRadioObject: checkRadioType = {}\n\n    // 取得した全システムでボタン用オブジェクトを初期化\n    Object.values(systems).map((v, i) => {\n      checkRadioObject[v.system_id] = {\n        ...v,\n\n        main_flg: false,\n        used: false,\n      }\n    })\n\n    // 所属しているシステムの状態をボタン用オブジェクトに反映\n    dataSystem.map((v, i) => {\n      checkRadioObject[v.system_id] = {\n        ...checkRadioObject[v.system_id],\n\n        main_flg: v.main_flg,\n        used: true\n      }\n    })\n\n    // ボタン用のオブジェクトを配列に直して返却\n    return Object.values(checkRadioObject)\n  }\n)","import { SortDirection } from \"@material-ui/core\";\nimport { machineData } from \"appConfig\";\nimport { Action } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\n\n// State Type\ntype MachinesState = {\n\t// 今持っている最新のデータ\n\tdatas: machineData[],\n\n\teditElement: {\n\t\tdata: machineData,\n\t\tmodalFlg: boolean,\n\t}\n\n\t// テーブルのデータ\n\ttableData: {\n\t\t// ソートされたデータ\n\t\tsortData: machineData[],\n\n\t\t// カラムのデータ\n\t\tcolumnDisplayName: {\n\t\t\t// ソートに用いるカラム（データカラム）: 表示のデータ\n\t\t\t[key in keyof machineData]: string\n\t\t},\n\n\t\t// ソート要素\n\t\tsortElement: {\n\t\t\torderBy: keyof machineData,\n\t\t\tsortDirection: Exclude<SortDirection, boolean>\n\t\t}\n\n\t\t// ページに関する要素\n\t\tpageElement: {\n\t\t\t// 現在のページ\n\t\t\tnowPage: number,\n\t\t\t// 表示している行数\n\t\t\trecordPerPage: number,\n\t\t\t// 総ページ数\n\t\t\tpageCount: number,\n\t\t}\n\t}\n}\n\n// Action Type\nconst MachinesActionType = {\n\tsetMachine: \"SET_MACHINE\",\n\tsetMachines: \"SET_MACHINES\",\n\teditMachine: \"EDIT_MACHINE\",\n\tsortMachine: \"SORT_MACHINE\",\n\tpagingMachine: \"PAGING_MACHINE\"\n} as const;\ntype MachinesActionType = keyof typeof MachinesActionType\n\n// データ取得\ntype SetMachineAction = Action<typeof MachinesActionType.setMachine> & {\n\tdata: machineData,\n\tmodalFlg: boolean,\n}\n\n// データ一覧取得\ntype SetMachinesAction = Action<typeof MachinesActionType.setMachines> & {\n\tdata: machineData[],\n}\n\n// データ編集\ntype EditMachineAction = Action<typeof MachinesActionType.editMachine> & {\n\tdata: machineData[keyof machineData],\n\tkey: keyof machineData\n}\n\n// データソート\ntype SortMachineAction = Action<typeof MachinesActionType.sortMachine> & {\n\tsortData: machineData[],\n\tsortElement: {\n\t\torderBy: keyof machineData,\n\t\tsortDirection: Exclude<SortDirection, boolean>\n\t}\n}\n\n// ページング関連アクション\ntype PagingMachineAction = Action<typeof MachinesActionType.pagingMachine> & {\n\tnextPage: number\n}\n\n// アクションタイプ統合\ntype MachinesAction = SetMachineAction | SetMachinesAction | EditMachineAction | SortMachineAction | PagingMachineAction\nexport {\n\ttype MachinesState,\n\ttype MachinesAction,\n\tMachinesActionType,\n}","import { SortDirection } from \"@material-ui/core\";\nimport { initialProductData, productData } from \"appConfig\";\nimport { Action, ActionCreator } from \"redux\";\nimport { initialState } from \"./reducer\";\nimport { ProductsActionType, ProductsAction } from \"./types\";\n\nexport const setProductAction = (productData: productData, editFlg: boolean): ProductsAction => {\n  return {\n    type: ProductsActionType.setProduct,\n    data: {\n      ...initialProductData,\n      ...productData\n    },\n    editFlg: editFlg,\n  }\n}\n\nexport const setProductsAction = (productDatas: productData[]): ProductsAction => {\n  return {\n    type: ProductsActionType.setProducts,\n    data: productDatas,\n  }\n}\n\nexport const editDataAction= (targetData: productData[keyof productData], key: keyof productData): ProductsAction=>{\n  return {\n    type: ProductsActionType.editProduct,\n    data: targetData,\n    key: key\n  }\n}\n\n\nexport const sortProductAction = (productDatas: productData[], orderBy: keyof productData, sortDirection: Exclude<SortDirection, boolean>): ProductsAction => {\n  return {\n    type: ProductsActionType.sortProduct,\n    sortData: productDatas,\n    sortElement: {\n      orderBy: orderBy,\n      sortDirection: sortDirection\n    }\n  }\n}\n\nexport const pagingProductAction = (nextPage: number): ProductsAction => {\n  return {\n    type: ProductsActionType.pagingProduct,\n    nextPage: nextPage\n  }\n}","import { sortProductAction, setProductsAction, setProductAction } from \"./action\"\nimport { ProductsAction } from \"./types\"\nimport { AppThunkAction } from \"reducks/store\"\nimport { appConfig, isCompanyData, isProductTypeData, productData, ProductsAPI } from \"appConfig\"\nimport { SortDirection } from \"@material-ui/core\"\n\nexport const getProducts = (): AppThunkAction<ProductsAction> => {\n  return async (dispatch, getState) => {\n    const orderBy = getState().products.tableData.sortElement.orderBy\n\n    await appConfig.axios.get(ProductsAPI.root)\n      .then(res => {\n        const products = res.data.products as productData[]\n        dispatch(setProductsAction(products))\n        dispatch(sortProductDatas2(orderBy, true))\n      }\n      )\n      .catch(error =>\n        console.error(error)\n      )\n  }\n}\n\nexport const getProduct = (product_id: number): AppThunkAction<ProductsAction> => {\n  return async (dispatch, getState) => {\n\n    appConfig.axios.get(ProductsAPI.root + `/${product_id}`)\n      .then(res => {\n        const productData = res.data.product as productData\n        dispatch(setProductAction(productData, true))\n      })\n      .catch(e => {\n        console.log(e)\n      })\n  }\n}\n\nexport const sortProductDatas = (targetColumn: keyof productData, updateFlg: boolean = false)\n  : AppThunkAction<ProductsAction> => {\n\n  return async (dispatch, getState) => {\n    const sortState = { ...getState().products.tableData.sortElement }\n    const datas = [...getState().products.datas]\n\n\n    if (datas.length === 0)\n      return\n\n    if (targetColumn !== \"manufacturer\") {\n\n    }\n\n\n    const sortFunction = () => { }\n    // ソート規則のオブジェクト\n    const sortRule = {\n      \"asc\": [1, -1],\n      \"desc\": [-1, 1],\n    }\n\n    const nextSortState = sortState\n    // カラムが同じならソート順を入れ替え（データ更新時は無視）\n    if (nextSortState.orderBy === targetColumn && !updateFlg) {\n      switch (nextSortState.sortDirection) {\n        case \"asc\":\n          nextSortState.sortDirection = \"desc\"\n          break;\n        case \"desc\":\n          nextSortState.sortDirection = \"asc\"\n          break;\n      }\n    }\n    else {\n      nextSortState.orderBy = targetColumn\n      nextSortState.sortDirection = \"desc\"\n    }\n\n    //ソート\n    const nextSortDatas = datas.sort((a, b) => {\n      if (a[targetColumn] < b[targetColumn])\n        return sortRule[nextSortState.sortDirection][0]\n      else if (a[targetColumn] > b[targetColumn])\n        return sortRule[nextSortState.sortDirection][1]\n      else\n        return 0\n    })\n    // console.log(\"ms: \", getState().machines.tableData.sortData)\n    // console.log(\"ss: \", getState().products.tableData.sortData)\n    dispatch(sortProductAction(nextSortDatas, nextSortState.orderBy, nextSortState.sortDirection))\n  }\n}\n\nexport const sortProductDatas2 = (targetColumn: keyof productData, updateFlg: boolean = false)\n  : AppThunkAction<ProductsAction> => {\n\n  const sortFunction = (a: number | string, b: number | string, sortDirection: Exclude<SortDirection, boolean>): number => {\n\n    switch (sortDirection) {\n      case \"asc\":\n        if (a < b)\n          return -1\n        else if (a > b)\n          return 1\n        else\n          break;\n\n      case \"desc\":\n        if (a < b)\n          return 1\n        else if (a > b)\n          return -1\n        else\n          break;\n\n    }\n    return 0\n  }\n\n  return async (dispatch, getState) => {\n    const sortState = { ...getState().products.tableData.sortElement }\n    const datas = [...getState().products.datas]\n\n    // データが無い場合は終了\n    if (datas.length === 0)\n      return\n\n    // 次状態を現在のstateで初期化\n    const nextSortState = { ...sortState }\n\n    // データ更新ならばソート順は変更しない\n    switch (updateFlg) {\n      case true:\n        break;\n      case false:\n        if (sortState.orderBy === targetColumn) {\n          switch (sortState.sortDirection) {\n            case \"asc\":\n              nextSortState.sortDirection = \"desc\"\n              break;\n            case \"desc\":\n              nextSortState.sortDirection = \"asc\"\n              break;\n          }\n        }\n        // 別カラムを選ぶ場合は昇順にする\n        else {\n          nextSortState.orderBy = targetColumn\n          nextSortState.sortDirection = \"asc\"\n        }\n        break;\n    }\n\n    const nextSortDatas = datas.sort((a, b) => {\n      const typedA = a[targetColumn] === (\"\" || undefined || null) ? \"-\" : a[targetColumn]\n      const typedB = b[targetColumn] === (\"\" || undefined || null) ? \"-\" : b[targetColumn]\n\n      let targetA: string | number = 0;\n      let targetB: string | number = 0\n\n      switch (typeof typedA) {\n        case \"string\":\n        case \"number\":\n          targetA = typedA\n          targetB = typedB as typeof typedA\n          break;\n        case \"object\":\n          console.log(typedA)\n          if (isProductTypeData(typedA)) {\n            targetA = typedA.product_type_name\n            targetB = (typedB as typeof typedA).product_type_name\n          }\n          else if (isCompanyData(typedA)) {\n            targetA = typedA.company_name\n            targetB = (typedB as typeof typedA).company_name\n          }\n          break;\n        default:\n          return 0\n      }\n\n      return sortFunction(targetA, targetB, nextSortState.sortDirection)\n    })\n\n    dispatch(sortProductAction(nextSortDatas, nextSortState.orderBy, nextSortState.sortDirection))\n\n  }\n}\n\nexport const pagingTable = (): AppThunkAction<ProductsAction> => {\n  return async () => {\n\n  }\n}","import { ProductsState, ProductsAction, ProductsActionType } from \"./types\"\nimport { Reducer } from \"redux\";\nimport { initialProductData } from \"appConfig\";\n\nexport const initialState: ProductsState = {\n  datas: [initialProductData],\n  editElement: {\n    data: initialProductData,\n    editFlg: false,\n  },\n  tableData: {\n    sortData: [initialProductData],\n    columnDisplayName: {\n      product_id: \"ID\",\n      product_name: \"製品名\",\n      model_number: \"型番\",\n      product_type: \"機材型\",\n      manufacturer: \"メーカー\",\n    },\n    sortElement: {\n      orderBy: \"product_id\",\n      sortDirection: \"desc\"\n    },\n    pageElement: {\n      nowPage: 0,\n      recordPerPage: 25,\n      pageCount: 0,\n    },\n  }\n}\n\nexport const productsReducer: Reducer<ProductsState, ProductsAction> = (state = initialState, action): ProductsState => {\n\n  switch (action.type) {\n    case ProductsActionType.setProduct:\n      return {\n        ...state,\n\n        editElement: {\n          ...state.editElement,\n\n          data: action.data,\n          editFlg: action.editFlg\n        }\n\n      }\n    case ProductsActionType.setProducts:\n      return {\n        ...state,\n\n        datas: action.data,\n        tableData: {\n          ...state.tableData,\n\n          pageElement: {\n            ...state.tableData.pageElement,\n\n            nowPage: 0\n          }\n        }\n\n      }\n\n    case ProductsActionType.editProduct:\n      return {\n        ...state,\n        editElement: {\n          ...state.editElement,\n\n          data: {\n            ...state.editElement.data,\n\n            [action.key]: action.data\n          }\n        }\n      }\n    case ProductsActionType.sortProduct:\n      return {\n        ...state,\n\n        tableData: {\n          ...state.tableData,\n\n          sortData: action.sortData,\n          sortElement: action.sortElement,\n        }\n      }\n    case ProductsActionType.pagingProduct:\n      return {\n        ...state,\n\n        tableData: {\n          ...state.tableData,\n\n          pageElement: {\n            ...state.tableData.pageElement,\n\n            nowPage: action.nextPage\n          }\n        }\n      }\n    default:\n      const _: never = action\n      return state\n  }\n}","import { SortDirection } from \"@material-ui/core\";\nimport { productData } from \"appConfig\";\nimport { Action } from \"redux\";\n\n// State Type\ntype ProductsState = {\n\t// 今持っている最新のデータ\n\tdatas: productData[],\n\n\teditElement: {\n\t\tdata: productData,\n\t\teditFlg: boolean,\n\t}\n\n\t// テーブルのデータ\n\ttableData: {\n\t\t// ソートされたデータ\n\t\tsortData: productData[],\n\n\t\t// カラムのデータ\n\t\tcolumnDisplayName: {\n\t\t\t// ソートに用いるカラム（データカラム）: 表示のデータ\n\t\t\t[key in keyof productData]: string\n\t\t},\n\n\t\t// ソート要素\n\t\tsortElement: {\n\t\t\torderBy: keyof productData,\n\t\t\tsortDirection: Exclude<SortDirection, boolean>\n\t\t}\n\n\t\t// ページに関する要素\n\t\tpageElement: {\n\t\t\t// 現在のページ\n\t\t\tnowPage: number,\n\t\t\t// 表示している行数\n\t\t\trecordPerPage: number,\n\t\t\t// 総ページ数\n\t\t\tpageCount: number,\n\t\t}\n\t}\n}\n\n// Action Type\nconst ProductsActionType = {\n\tsetProduct: \"SET_PRODUCT\",\n\tsetProducts: \"SET_PRODUCTS\",\n\teditProduct: \"EDIT_PRODUCT\",\n\tsortProduct: \"SORT_PRODUCT\",\n\tpagingProduct: \"PAGING_PRODUCT\"\n} as const;\ntype ProductsActionType = keyof typeof ProductsActionType\n\n// データ取得\ntype SetProductAction = Action<typeof ProductsActionType.setProduct> & {\n\tdata: productData,\n\teditFlg: boolean,\n}\n\n// データ一覧取得\ntype SetProductsAction = Action<typeof ProductsActionType.setProducts> & {\n\tdata: productData[],\n}\n\n// データ編集\ntype EditProductAction = Action<typeof ProductsActionType.editProduct> & {\n\tdata: productData[keyof productData],\n\tkey: keyof productData\n}\n\n// データソート\ntype SortProductAction = Action<typeof ProductsActionType.sortProduct> & {\n\tsortData: productData[],\n\tsortElement: {\n\t\torderBy: keyof productData,\n\t\tsortDirection: Exclude<SortDirection, boolean>\n\t}\n}\n\n// ページング関連アクション\ntype PagingProductAction = Action<typeof ProductsActionType.pagingProduct> & {\n\tnextPage: number\n}\n\n// アクションタイプ統合\ntype ProductsAction = SetProductAction | SetProductsAction | EditProductAction | SortProductAction | PagingProductAction\nexport {\n\ttype ProductsState,\n\ttype ProductsAction,\n\tProductsActionType,\n}","import { RouteList } from \"appConfig\";\nimport { RouterState } from \"connected-react-router\";\nimport { RootState } from \"reducks/store\";\nimport { createSelector } from \"reselect\";\n\nconst RouterSelector = (state: RouterState) => state\n\nexport const getPageNumber = createSelector(\n  [RouterSelector],\n  routerState => {\n    const locationName= routerState.location.pathname\n\n    switch (locationName) {\n      case RouteList.top:\n        return 0;\n      case RouteList.machines:\n        return 1;\n      case RouteList.systems:\n        return 2;\n      case RouteList.products:\n        return 3;\n      case RouteList.users:\n        return 4;\n      default:\n        return 0;\n    }\n  }\n);\n","import { SortDirection } from \"@material-ui/core\";\nimport { initialSystemData, systemData } from \"appConfig\";\nimport { Action, ActionCreator } from \"redux\";\nimport { initialState } from \"./reducer\";\nimport { SystemsActionType, SystemsAction } from \"./types\";\n\nexport const setSystemAction = (systemData: systemData, editFlg: boolean): SystemsAction => {\n  return {\n    type: SystemsActionType.setSystem,\n    data: {\n      ...initialSystemData,\n      ...systemData\n    },\n    editFlg: editFlg,\n  }\n}\n\nexport const setSystemsAction = (systemDatas: systemData[]): SystemsAction => {\n  return {\n    type: SystemsActionType.setSystems,\n    data: systemDatas,\n  }\n}\n\nexport const editDataAction= (targetData: systemData[keyof systemData], key: keyof systemData): SystemsAction=>{\n  return {\n    type: SystemsActionType.editSystem,\n    data: targetData,\n    key: key\n  }\n}\n\n\nexport const sortAction = (systemDatas: systemData[], orderBy: keyof systemData, sortDirection: Exclude<SortDirection, boolean>): SystemsAction => {\n  return {\n    type: SystemsActionType.sortSystem,\n    sortData: systemDatas,\n    sortElement: {\n      orderBy: orderBy,\n      sortDirection: sortDirection\n    }\n  }\n}\n\nexport const pagingAction = (nextPage: number): SystemsAction => {\n  return {\n    type: SystemsActionType.pagingSystem,\n    nextPage: nextPage\n  }\n}","import { sortAction, setSystemsAction, setSystemAction } from \"./action\"\nimport { SystemsAction } from \"./types\"\nimport { AppThunkAction } from \"reducks/store\"\nimport { appConfig, systemData, SystemsAPI } from \"appConfig\"\n\nexport const getSystems = (): AppThunkAction<SystemsAction> => {\n  return async (dispatch, getState) => {\n    const orderBy = getState().systems.tableData.sortElement.orderBy\n\n    await appConfig.axios.get(SystemsAPI.root)\n      .then(res => {\n        const systems = res.data.systems as systemData[]\n        dispatch(setSystemsAction(systems))\n        dispatch(sortSystemDatas(orderBy, true))\n      }\n      )\n      .catch(error =>\n        console.error(error)\n      )\n  }\n}\n\nexport const getSystem = (system_id: number): AppThunkAction<SystemsAction> => {\n  return async (dispatch, getState) => {\n\n    appConfig.axios.get(SystemsAPI.root + `/${system_id}`)\n      .then(res => {\n        const systemData = res.data.system as systemData\n        dispatch(setSystemAction(systemData, true))\n      })\n      .catch(e => {\n        console.log(e)\n      })\n  }\n}\n\nexport const sortSystemDatas = (targetColumn: keyof systemData, updateFlg: boolean = false)\n  : AppThunkAction<SystemsAction> => {\n\n  return async (dispatch, getState) => {\n    const sortState = { ...getState().systems.tableData.sortElement }\n    const datas = [...getState().systems.datas]\n    if (datas.length === 0)\n      return\n\n    // ソート規則のオブジェクト\n    const sortRule = {\n      \"asc\": [1, -1],\n      \"desc\": [-1, 1],\n    }\n\n    const nextSortState = sortState\n    // カラムが同じならソート順を入れ替え（データ更新時は無視）\n    if (nextSortState.orderBy === targetColumn && !updateFlg) {\n      switch (nextSortState.sortDirection) {\n        case \"asc\":\n          nextSortState.sortDirection = \"desc\"\n          break;\n        case \"desc\":\n          nextSortState.sortDirection = \"asc\"\n          break;\n      }\n    }\n    else {\n      nextSortState.orderBy = targetColumn\n      nextSortState.sortDirection = \"desc\"\n    }\n\n    //ソート\n    const nextSortDatas = datas.sort((a, b) => {\n      if (a[targetColumn] < b[targetColumn])\n        return sortRule[nextSortState.sortDirection][0]\n      else if (a[targetColumn] > b[targetColumn])\n        return sortRule[nextSortState.sortDirection][1]\n      else\n        return 0\n    })\n    // console.log(\"ms: \", getState().machines.tableData.sortData)\n    // console.log(\"ss: \", getState().systems.tableData.sortData)\n    dispatch(sortAction(nextSortDatas, nextSortState.orderBy, nextSortState.sortDirection))\n  }\n}\n\nexport const pagingTable = (): AppThunkAction<SystemsAction> => {\n  return async () => {\n\n  }\n}","import { SystemsState, SystemsAction, SystemsActionType } from \"./types\"\nimport { Reducer } from \"redux\";\nimport { initialSystemData } from \"appConfig\";\n\nexport const initialState: SystemsState = {\n  datas: [initialSystemData],\n  editElement: {\n    data: initialSystemData,\n    editFlg: false,\n  },\n  tableData: {\n    sortData: [initialSystemData],\n    columnDisplayName: {\n      system_id: \"ID\",\n      system_name: \"システム名\",\n      system_en_name: \"システム英名\",\n    },\n    sortElement: {\n      orderBy: \"system_id\",\n      sortDirection: \"desc\"\n    },\n    pageElement: {\n      nowPage: 0,\n      recordPerPage: 25,\n      pageCount: 0,\n    },\n  }\n}\n\nexport const systemsReducer: Reducer<SystemsState, SystemsAction> = (state = initialState, action): SystemsState => {\n\n  switch (action.type) {\n    case SystemsActionType.setSystem:\n      return {\n        ...state,\n\n        editElement: {\n          ...state.editElement,\n\n          data: action.data,\n          editFlg: action.editFlg\n        }\n\n      }\n    case SystemsActionType.setSystems:\n      return {\n        ...state,\n\n        datas: action.data,\n        tableData: {\n          ...state.tableData,\n\n          pageElement: {\n            ...state.tableData.pageElement,\n\n            nowPage: 0\n          }\n        }\n\n      }\n\n    case SystemsActionType.editSystem:\n      return {\n        ...state,\n        editElement: {\n          ...state.editElement,\n\n          data: {\n            ...state.editElement.data,\n\n            [action.key]: action.data\n          }\n        }\n      }\n    case SystemsActionType.sortSystem:\n      return {\n        ...state,\n\n        tableData: {\n          ...state.tableData,\n\n          sortData: action.sortData,\n          sortElement: action.sortElement,\n        }\n      }\n    case SystemsActionType.pagingSystem:\n      return {\n        ...state,\n\n        tableData: {\n          ...state.tableData,\n\n          pageElement: {\n            ...state.tableData.pageElement,\n\n            nowPage: action.nextPage\n          }\n        }\n      }\n    default:\n      const _: never = action\n      return state\n  }\n}","import { SortDirection } from \"@material-ui/core\";\nimport { systemData } from \"appConfig\";\nimport { Action } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\n\n// State Type\ntype SystemsState = {\n\t// 今持っている最新のデータ\n\tdatas: systemData[],\n\n\teditElement: {\n\t\tdata: systemData,\n\t\teditFlg: boolean,\n\t}\n\n\t// テーブルのデータ\n\ttableData: {\n\t\t// ソートされたデータ\n\t\tsortData: systemData[],\n\n\t\t// カラムのデータ\n\t\tcolumnDisplayName: {\n\t\t\t// ソートに用いるカラム（データカラム）: 表示のデータ\n\t\t\t[key in keyof systemData]: string\n\t\t},\n\n\t\t// ソート要素\n\t\tsortElement: {\n\t\t\torderBy: keyof systemData,\n\t\t\tsortDirection: Exclude<SortDirection, boolean>\n\t\t}\n\n\t\t// ページに関する要素\n\t\tpageElement: {\n\t\t\t// 現在のページ\n\t\t\tnowPage: number,\n\t\t\t// 表示している行数\n\t\t\trecordPerPage: number,\n\t\t\t// 総ページ数\n\t\t\tpageCount: number,\n\t\t}\n\t}\n}\n\n// Action Type\nconst SystemsActionType = {\n\tsetSystem: \"SET_SYSTEM\",\n\tsetSystems: \"SET_SYSTEMS\",\n\teditSystem: \"EDIT_SYSTEM\",\n\tsortSystem: \"SORT_SYSTEM\",\n\tpagingSystem: \"PAGING_SYSTEM\"\n} as const;\ntype SystemsActionType = keyof typeof SystemsActionType\n\n// データ取得\ntype SetSystemAction = Action<typeof SystemsActionType.setSystem> & {\n\tdata: systemData,\n\teditFlg: boolean,\n}\n\n// データ一覧取得\ntype SetSystemsAction = Action<typeof SystemsActionType.setSystems> & {\n\tdata: systemData[],\n}\n\n// データ編集\ntype EditSystemAction = Action<typeof SystemsActionType.editSystem> & {\n\tdata: systemData[keyof systemData],\n\tkey: keyof systemData\n}\n\n// データソート\ntype SortAction = Action<typeof SystemsActionType.sortSystem> & {\n\tsortData: systemData[],\n\tsortElement: {\n\t\torderBy: keyof systemData,\n\t\tsortDirection: Exclude<SortDirection, boolean>\n\t}\n}\n\n// ページング関連アクション\ntype PagingAction = Action<typeof SystemsActionType.pagingSystem> & {\n\tnextPage: number\n}\n\n// アクションタイプ統合\ntype SystemsAction = SetSystemAction | SetSystemsAction | EditSystemAction | SortAction | PagingAction\nexport {\n\ttype SystemsState,\n\ttype SystemsAction,\n\tSystemsActionType,\n}","import { createStore, combineReducers, applyMiddleware, type Action, } from \"redux\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\"\nimport { createBrowserHistory } from \"history\"\nimport { countReducer } from \"./Counter/reducer\";\nimport { countReducer as count2Reducer } from \"./Counter2/reducer\";\nimport thunk, { ThunkAction } from \"redux-thunk\";\nimport { machinesReducer } from \"./Machines/reducer\";\nimport { systemsReducer } from \"./Systems/reducer\";\nimport { productsReducer } from \"./Products/reducer\";\n\nconst history = createBrowserHistory()\n\n// reducerの結合\nconst reducers = combineReducers({\n    router: connectRouter(history),\n    count: countReducer,\n    count2: count2Reducer,\n    machines: machinesReducer,\n    systems: systemsReducer,\n    products: productsReducer,\n})\n\n// ミドルウェアの統合\nconst middlewares = applyMiddleware(\n    // storeと接続\n    routerMiddleware(history),\n    // 非同期処理用のミドルウェア\n    thunk\n)\n\n// ストア生成関数\nconst storeCreator = () => {\n    return createStore(\n        reducers,\n        middlewares\n    )\n}\n\n// ストアの生成\nconst store = storeCreator()\n\n// 全stateの型\nexport type RootState = ReturnType<typeof reducers>         // === ReturnType<typeof store.getState>\n\n// 全thunkActionの型\nexport type AppThunkAction<MyActionType extends Action = Action, T = void> = ThunkAction<T, RootState, undefined, MyActionType>\nexport type AppDispatchType = typeof store.dispatch\nexport { history };\nexport default store;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t97: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_self\"] = self[\"webpackChunkreact_self\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [296], function() { return __webpack_require__(38819); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","document","getElementById","render","StrictMode","StylesProvider","injectFirst","Provider","store","ConnectedRouter","history","MuiPickersUtilsProvider","utils","Header","Nav2","Footer","useHistory","useState","location","pathname","RouteList","top","machines","systems","products","users","value","onChange","label","component","Link","to","useSelector","router","useDispatch","getPageNumber","push","onClick","default","d","getMachines","className","convertCheckRadioSystems","shallowEqual","map","main_flg","system_id","used","filter","system_name","system_en_name","editDataAction","c","preventDefault","Fragment","key","control","checked","editElement","data","useRef","ip_id","wiredflg","console","log","ipv4_address","target","defaultValue","onBlur","IconButton","current","machine_id","AddCircleOutline","pop","RemoveCircleOutline","variant","open","onClose","setMachineAction","initialMachineData","closeAfterTransition","in","multiline","DatePicker","format","disableToolbar","s","tableData","p","pagingMachineAction","window","scrollTo","getMachine","useEffect","count","length","onPageChange","page","nowPage","rowsPerPage","recordPerPage","sortKey","machine_name","host_name","administrator","place","serial_number","product","assurance","vender","notes","updated_at","slice","find","product_name","company_name","toString","sortDirection","orderBy","active","direction","sortMachineDatas","pagingProductAction","getProduct","getProducts","product_id","product_type","manufacturer","model_number","product_type_name","sortProductDatas2","pagingAction","getSystem","getSystems","sortSystemDatas","Switch","Route","exact","path","companies","roleData","initialRoleData","isRoleData","statusData","initialStatusData","isStatusData","productTypeData","initialProductTypeData","isProductTypeData","machineData","machineSystem","isMachineData","isMachineSystem","systemData","initialSystemData","isSystemData","ipAddress","initialIpAddress","isIpAddress","productData","i","initialProductData","isProductData","companyData","initialCompanyData","isCompanyData","MachinesAPI","root","search","show","exchange","edit_by_qr","SystemsAPI","ProductsAPI","isArray","Array","defaults","baseURL","API_URL","VERSION","a","doAPI","development","appConfig","company_id","status_id","status_name","role_id","role_name","product_type_id","qr_or_barcode","maintenance_date","purchase_date","status","ip_addresses","role","created_at","Date","countReducer","type","CountActionTypes","increment","decrement","countReset","CountActionType","MachinesActionType","setMachine","modalFlg","setMachinesAction","setMachines","editMachine","sortMachineAction","sortMachine","sortData","sortElement","pagingMachine","nextPage","axios","get","then","catch","error","machine","setSystemsAction","setProductsAction","datas","sort","pagingTable","initialState","columnDisplayName","pageElement","pageCount","machinesReducer","createSelector","Object","values","setProductAction","ProductsActionType","setProduct","editFlg","setProducts","editProduct","sortProductAction","sortProduct","pagingProduct","sortProductDatas","productsReducer","setSystemAction","SystemsActionType","setSystem","setSystems","editSystem","sortAction","sortSystem","pagingSystem","system","systemsReducer","createBrowserHistory","combineReducers","connectRouter","count2","applyMiddleware","routerMiddleware","createStore","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}